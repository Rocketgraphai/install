name: Test install.sh

on:
  push:
    branches: [ main, ci-testing ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test-install:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-24.04]
        engine: [docker-v2, docker-v1, docker-pwsh, podman]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install docker-compose v1 (1.27.0 binary)
        if: matrix.engine == 'docker-v1'
        run: |
          sudo rm /usr/libexec/docker/cli-plugins/docker-compose
          sudo curl -L "https://github.com/docker/compose/releases/download/1.27.0/docker-compose-$(uname -s)-$(uname -m)" \
            -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      # --- PODMAN ---
      - name: Install Podman + podman-compose
        if: matrix.engine == 'podman'
        run: |
          sudo apt-get update
          sudo apt-get remove -y docker-ce docker-ce-cli
          sudo apt-get install -y podman python3-pip
          sudo pip3 install podman-compose
          sudo echo "$(python3 -m site --user-base)/bin" >> "$GITHUB_PATH"
          podman --version
          podman-compose --version

      # --- VERIFY ---
      - name: Verify container engine
        run: |
          case "${{ matrix.engine }}" in
            docker-v2|docker-pwsh)
              docker --version
              docker compose version
              ;;
            docker-v1)
              docker --version
              docker-compose --version
              ;;
            podman)
              podman --version
              podman-compose --version
              ;;
          esac
          lsof -v

      # --- PWSH INSTALL (docker-pwsh only) ---
      - name: Run install.ps1
        if: matrix.engine == 'docker-pwsh'
        run: |
          sudo apt-get update
          sudo apt-get install -y powershell
          sudo pwsh ./install.ps1 --no-browser --no-pause

      - name: Run install.sh
        run: |
          chmod +x ./install.sh
          sudo ./install.sh

      - name: Validate port 80 is listening
        run: |
          sudo ss -ltnp | grep ':80 ' || {
            echo "Port 80 is not listening"; exit 1;
          }
